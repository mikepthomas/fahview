~~~
~~ #%L
~~ This file is part of FAHView.
~~ %%
~~ Copyright (C) 2011 - 2014 Michael Thomas <mikepthomas@outlook.com>
~~ %%
~~ FAHView is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU General Public License as published by
~~ the Free Software Foundation, either version 3 of the License, or
~~ (at your option) any later version.
~~ %
~~ FAHView is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU General Public License for more details.
~~ %
~~ You should have received a copy of the GNU General Public License
~~ along with FAHView.  If not, see <http://www.gnu.org/licenses/>.
~~ #L%
~~~
                       -------------------------------
                       Second Increment (Requirements)
                       -------------------------------
                               Michael Thomas
                       -------------------------------
                                 04/04/2012

About

  This is the section that the requirements will be collected for the second
  increment of the proposed system, once again the requirements will be used as
  the basis to test the system when it has been implemented to ensure that the
  implemented features fulfil the criteria of what is expected of the finished
  system.

Scope

  The second increment of the project concentrates on the integration of a 3D
  viewer to display the protein contained within the work unit.

Stakeholders

  The main stakeholders for this increment are the users that are curious as to
  what the protein that their machine is working on actually looks like and how
  it's structure evolves over time whilst the computer is doing its calculations
  of the forces between the molecules to estimate its final resting shape.

Functional Requirements

  * The system MUST be available for the Windows operation system

  * The system MUST be available for the Linux operation system

  * The system MUST be available for the Macintosh operation system

  * The system MUST be implemented in the Java programming language

  * The system MUST display a 3D representation of the current work unit

Non Functional Requirements

  * The system MUST allow the model to scroll without user noticeable lag
    (>=25 fps)

Use Case Diagram

[images/second-increment/use-case-diagram.png]

Use Case Stories

* Use Case 1: View Protein structure

** Scenario

  The user of the client wants to see a 3D representation of the protein
  currently being worked on the work unit in progress.

** Background

  The Folding@home client has downloaded and is currently working on a work
  unit, therefore all work files are present within the client.

** Actors

  * User

  * Folding@home Client

** Interactions

  [User]   Selects the client required from the list on the left hand pane.

  [System] Displays queue details of the selected client.

  [User]   Selects the current queue index being worked on.

  [System] Displays the information from within the queue for the selected queue
           index.

  [User]   Selects the "View protein" tab on the information window.

  [System] Displays the 3D representation of the protein being worked on in the
           current work unit.

  [User]   (Optional) - Selects "More info" button.

  [System] (Optional) - Displays more information about the protein including
           numbers of individual atoms.
